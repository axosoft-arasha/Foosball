@model List<Foosball.Models.AllPicksViewModel>

<div class="container">
	<nav class="picks-nav">
		<ul class="pagination">
			@for (int i = 1; i <= ViewBag.CurrentWeek; i++)
			{
				<li class="@(i == ViewBag.Week ? "active" : "")"><a href="@Url.Action("All", new { week = i })">@i</a></li>
			}
		</ul>
	</nav>
</div>

@{ 
	var masterPicks = Model[0];
	var tableWidth = 64 + 160 + masterPicks.PickedTeams.Count * 64 + 32;
}

@if(ViewBag.NoGamesLocked)
{
	<h4 class="column-center">No games have been locked for this week</h4>
}

<table id="picksTable" class="row-border compact stripe" cellspacing="0" width="@(tableWidth)px">
	<thead>
		<tr>
			<th></th>
			<th></th>
			<th></th>
			@for (int i = 0; i < masterPicks.PickedTeams.Keys.Count; i++)
			{
				<th></th>
			}
			<th></th>
		</tr>
	</thead>
	<tbody>
		<tr class="master-picks">
			<td></td>
			<td></td>
			<td>RESULTS</td>
			@foreach (var team in masterPicks.PickedTeams.Values)
			{
				<td>
					@if (team != null)
					{
						<img src="@team.ImageUrl" alt="@team.Name" title="@team.Name" class="team-logo-small" />
					}
					else
					{
						// no pick
						<div class="no-pick"></div>
					}
				</td>
			}
			<td>@(masterPicks.CombinedScore.HasValue ? masterPicks.CombinedScore.Value.ToString() : "")</td>
		</tr>
		<tr class="spacer-row">
			@for(var i=0; i< masterPicks.PickedTeams.Count + 4; i++)
			{
				<td></td>
			}
		</tr>

		@foreach (var pick in Model.Where(m => m.User.Id != Foosball.Entities.Pick.MASTER_PICKS_USER_ID))
		{
			<tr>
				<td>@pick.CorrectPicks</td>
				<td>
					@if (!string.IsNullOrEmpty(pick.User.ImageUrl))
					{
						<img src="@(pick.User.ImageUrl + (pick.User.ImageUrl.Contains("gravatar") ? "?s=40" : ""))" />
					}
				</td>
				<td>
					@(pick.User.FirstName + " " + pick.User.LastName)
				</td>

				@foreach (var scheduleId in pick.PickedTeams.Keys)
				{
					var team = pick.PickedTeams[scheduleId];
					<td class="@(ViewBag.NoGamesLocked || masterPicks.PickedTeams[scheduleId] == null ? "" : (team != null && masterPicks.PickedTeams[scheduleId].Id == team.Id ? "correct-pick" : "incorrect-pick"))">
						@if (team != null)
						{
							<img src="@team.ImageUrl" alt="@team.Name" title="@team.Name" class="team-logo-small" />
						}
						else
						{
							// no pick
							<div class="no-pick"></div>
						}
					</td>
				}
				<td>@(pick.CombinedScore.HasValue ? pick.CombinedScore.Value.ToString() : "")</td>
			</tr>
		}
	</tbody>
</table>

<script type="text/javascript">
	$(document).ready(function () {
		$('#picksTable').dataTable({
			paging: false,
			ordering: false,
			sorting: false,
			searching: false,
			info: false,
			order: [],
			columnDefs: [
				{ // points
					targets: 0,
					width: '50px',
					class: 'column-right standing-points'
				},
				{ // user image
					targets: 1,
					width: '1px'
				},
				{ // user name
					targets: 2,
					width: '100%'
				},
				{ // combined score
					targets: @(masterPicks.PickedTeams.Count + 3),
					width: '24px',
					class: 'column-right'
				}
			]
		});

		// change the container to fluid
		$('div.body-content').removeClass('container').addClass('container-fluid');
	});
</script>
