@model List<Foosball.Models.PickViewModel>

<h2>Week @ViewBag.CurrentWeek</h2>
<h6>Click a team to pick it</h6>

<table id="picksTable" class="row-border" cellspacing="0">
	<thead>
		<tr>
			<th></th>
			<th></th>
			<th>Time</th>
			<th>Home</th>
			<th>Away</th>
		</tr>
	</thead>
</table>

<script type="text/javascript">
	$(document).ready(function () {
		$('#picksTable').dataTable({
			"ajax": _rootDir + 'picks/listdata' + location.search,
			paging: false,
			ordering: false,
			sorting: false,
			info: false,
			order: [],
			columns: [
				{ data: 'Schedule.Date' },
				{ data: 'GameDateDisplay' },
				{ data: 'GameTimeDisplay' },
				{ data: 'Schedule.HomeTeam' },
				{ data: 'Schedule.AwayTeam' }
			],
			columnDefs: [
				{
					targets: 0,
					visible: false
				},
				{
					targets: 1,
					visible: false
				},
				{
					targets: 3,
					createdCell: function (cell, cellData, rowData, rowIndex, colIndex) {
						var td = $(cell);
						td.data('scheduleId', rowData.Schedule.Id);
						td.data('isHomeTeam', true);

						if (rowData.IsPick && rowData.PickHomeTeam)
						{
							td.addClass('picked');
						}
						if (rowData.CanPick) {
							td.addClass('pickable');
						}
					},
					render: function (data, type, row) {
						return '<img class="team-logo-small" src="' + data.ImageUrl + '"/><span class="team-name-list">' + data.Name.toUpperCase() + '</span>';
					}
				},
				{
					targets: 4,
					createdCell: function (cell, cellData, rowData, rowIndex, colIndex) {
						var td = $(cell);
						td.data('scheduleId', rowData.Schedule.Id);
						td.data('isHomeTeam', false);

						if (rowData.IsPick && !rowData.PickHomeTeam) {
							td.addClass('picked');
						}
						if (rowData.CanPick) {
							td.addClass('pickable');
						}
					},
					render: function (data, type, row) {
						var dom = '<img class="team-logo-small" src="' + data.ImageUrl + '"/><span class="team-name-list">' + data.Name.toUpperCase() + '</span>';

						if (row.Schedule.RequireScore) {
							dom += '<div class="col-xs-2" style="float:right"><input type="text" class="form-control" maxlength="3" value="' + (row.CombinedScore ? row.CombinedScore : '') + '" ' + (row.CanPick ? '' : 'readonly="readonly"') + ' /></div>';
						}

						//dom += '</div>'; // close the 'row'

						return dom;
					}
				},
				//{
				//	targets: 5,
				//	width: '150px',
				//	createdCell: function (cell, cellData, rowData, rowIndex, colIndex) {
				//		var td = $(cell);
				//		td.data('scheduleId', rowData.Schedule.Id);
				//	},
				//	render: function (data, type, row) {
				//		if (row.Schedule.RequireScore) {
				//			return '<div class="col-xs-6"><input type="text" class="form-control" maxlength="3" value="' + (data ? data : '') + '" ' + (row.CanPick ? '' : 'readonly="readonly"') + ' /></div>';
				//		}
				//		else {
				//			return '';
				//		}
				//	}
				//}
			],
			drawCallback: function (settings) {
				var api = this.api(),
					rows = api.rows({ page: 'current' }).nodes(),
					last = null,
					tieBreakerRow = '<tr><td colspan="3">&nbsp;</td></tr>';
 
				api.column(1, { page: 'current' }).data().each(function (group, i) {
					var lastRow = (i == rows.length - 1);

					if (last !== group) {
						$(rows).eq(i).before(
							(lastRow ? tieBreakerRow : '') +
							'<tr class="group ' + (lastRow ? 'tie-breaker' : '') + '"><td colspan="3">' + group + '</td></tr>'
						);
 
						last = group;
					}
				} );
			}
		});
	});

	$('#picksTable')
		.on('click', 'td.pickable', function (e) {
			savePick($(this));
		})
		.on('click', 'td.pickable span', function (e) {
			e.stopPropagation();

			savePick($(this).parent());
		});

	$('#picksTable')
		.on('keyup', 'input.form-control', function () {
			clearTimeout($.data(this, 'timer'));
			var wait = setTimeout(saveScore, 500, $(this));
			$(this).data('timer', wait);
		});

	function savePick(td) {
		var	tr = td.parent(),
			scheduleId = td.data('scheduleId'),
			isHomeTeam = td.data('isHomeTeam');

		// picked
		tr.find('td').removeClass('picked');
		td.addClass('picked');

		save(scheduleId, isHomeTeam, null);
	}

	function saveScore(input) {
		var div = input.parent(),
			td = div.parent(),
			tr = td.parent(),
			scheduleId = td.data('scheduleId'),
			score = input.val();
	
		div.removeClass('has-error');

		if (!$.isNumeric(score)) {
			div.addClass('has-error');
			return;		
		}

		try {
			score = parseInt(score, 10);
		}
		catch(ex) {
			div.addClass('has-error');
			return;		
		}

		if (score < 0) {
			div.addClass('has-error');
			return;
		}

		save(scheduleId, null, score);
	}

	function save(scheduleId, isHomeTeam, combinedScore) {
		// save the pick
		$.ajax({
			url: _rootDir + 'picks/pick',
			method: 'POST',
			data: {
				PickHomeTeam: isHomeTeam,
				CombinedScore: combinedScore,
				Schedule: {
					Id: scheduleId
				}
			},
			success: function (e) {
				console.log('pick saved');
			}
		});
	}
</script>
