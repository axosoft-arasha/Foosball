@model List<Foosball.Models.StandingsViewModel> 

@{
	var standing = Model.Count > 0 ? Model[0] : null;
	var tableWidth = 40 + 64 + 160 + (standing != null ? standing.WeeklyPoints.Count * 80 : 0) + 55;
}


<table id="standingsTable" class="row-border compact stripe" cellspacing="0" width="@(tableWidth)px">
	<thead>
		<tr>
			<th>Rank</th>
			<th></th>
			<th>Name</th>
			@if (Model.Count > 0)
			{
				for (int i = 1; i <= Model[0].WeeklyPoints.Count; i++)
				{
					<th class="column-right">Week @i</th>
				}
			}
			<th class="column-right">Total</th>
		</tr>
	</thead>
	<tbody>
		@foreach (var s in Model)
		{
			<tr>
				<td>@s.Rank</td>
				<td>
					@if (!string.IsNullOrEmpty(s.User.ImageUrl))
					{
						<img src="@(s.User.ImageUrl + (s.User.ImageUrl.Contains("gravatar") ? "?s=40" : ""))" class="userTooltip" title="@s.User.FirstName" />
					}
				</td>
				<td>
					@(s.User.FirstName + " " + s.User.LastName)
				</td>

				@for (var i = 0; i < s.WeeklyPoints.Count; i++)
				{
					<td class="column-right @(s.WeeklyPoints[i].WeekIsDone ? "rank-" + s.WeeklyPoints[i].Rank : "")" title="@(s.WeeklyPoints[i].AwardedMinPoints ? "No picks made, awarded minimum points minus one" : "")">
						@if (s.WeeklyPoints[i].AwardedMinPoints)
						{
								<span>*</span>
						}
						@s.WeeklyPoints[i].Points
					</td>
				}
				<td>@s.WeeklyPoints.Sum(w => w.Points)</td>
			</tr>
		}
	</tbody>
</table>

<script type="text/javascript">
	$(document).ready(function () {
		$('#standingsTable').dataTable({
			paging: false,
			ordering: false,
			sorting: false,
			searching: false,
			info: false,
			order: [],
			columnDefs: [
				{ // place
					targets: 0,
					width: '1px',
					class: 'column-right column-right-spacer'
				},
				{ // user image
					targets: 1,
					width: '1px'
				},
				{ // user name
					targets: 2,
					width: '160px'
				},
				@for (var i=0; i<(Model.Count > 0 ? Model[0].WeeklyPoints.Count : 0); i++)
				{
					@Html.Raw("{ targets: " + (i+3) + ", width: '60px', class: ' column-right-spacer' },")
				}
				{ // points
					targets: @((Model.Count > 0 ? Model[0].WeeklyPoints.Count : 0) + 3),
					width: '1px',
                    class: 'column-right column-right-spacer standing-points'
                }
			]
		});

		// change the container to fluid
		$('div.body-content').removeClass('container').addClass('container-fluid');

         $('.userTooltip').tooltipster({
			arrow: false,
			position: 'right',
			content: $('<span></span>'),
			functionBefore: function(origin, continueTooltip) {
				origin.tooltipster('content', $('<img src="' + this[0].src.replace('?s=40', '?s=320') + '"/>'));
				continueTooltip();
			}
		 });
	});
</script>